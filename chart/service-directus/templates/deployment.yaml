apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "directus.fullname" . }}
  labels:
    {{- include "directus.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "directus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "directus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "directus.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.persistence.enabled}}
          volumeMounts:
            {{- if eq .Values.postgres.enabled false}}
            - name: data
              mountPath: /directus/database
              subPath: database
            {{- end}}
            - name: data
              mountPath: /directus/uploads
              subPath: uploads
            {{- if .Values.persistence.extensions}}
            - name: data
              mountPath: /directus/extensions
              subPath: extensions
            {{- end}}
          {{- end}}
          ports:
            - name: http
              containerPort: 8055
              protocol: TCP
          env:
          {{- if .Values.postgres.enabled }}
            - name: DB_CLIENT
              value: "pg"
            - name: DB_HOST
              value: "{{ include "directus.dbname" . }}-rw"
            - name: DB_PORT
              value: "5432"
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: "{{ include "directus.dbname" . }}-app"
                  key: uri
          {{- else}}
            - name: DB_FILENAME
              value: "/directus/database/data.db"
            - name: DB_CLIENT
              value: "sqlite3"
          {{- end}}
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ include "directus.fullname" . }}
                  key: adminEmail
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "directus.fullname" . }}
                  key: adminPassword
            - name: SECRET
              value: "{{ .Values.auth.secret }}"
            {{- with .Values.extraEnv }}
            {{- range $key, $value := . }}
            - name: {{ $value.name | quote }}
              value: {{ $value.value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.livelinessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /server/ping
              port: http
          {{- end }}
          {{- if .Values.readynessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /server/ping
              port: http
          {{- end }}
      {{- if .Values.persistence.enabled}}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "directus.fullname" . }}
      {{- end}}
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}